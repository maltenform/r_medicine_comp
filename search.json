[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R/Medicine 2024 Data Challenge",
    "section": "",
    "text": "This is my attempt at the analyses requested in https://rconsortium.github.io/RMedicine_website/Competition.html. I focused on identifying predictive factors associated with two questions.\n\nOf the potential patients providing data, what factors were associated with succesful randomization?\nDefining compliance as the % of potential study weeks where a patient showed up with a negative test, what factors were associated with higher compliance?\n\n\nShow the code\n# load data and packages\nrequire(tidyverse)\nrequire(public.ctn0094data)\nrequire(public.ctn0094extra)\nrequire(pROC)\nrequire(ggeffects)\nrequire(kableExtra)\nrequire(broom)\nrequire(rms)\nrequire(betareg)\nrequire(scales)\nrequire(emmeans)\nrequire(marginaleffects)"
  },
  {
    "objectID": "index.html#use-bootstrap-validation-to-determine-what-values-are-persistent",
    "href": "index.html#use-bootstrap-validation-to-determine-what-values-are-persistent",
    "title": "R/Medicine 2024 Data Challenge",
    "section": "2.1 Use bootstrap validation to determine what values are persistent",
    "text": "2.1 Use bootstrap validation to determine what values are persistent\n\nShow the code\nvalidate_randomization &lt;- validate(lrm_randomization, B = 200, bw = TRUE)\n\n    Backwards Step-down - Original Model\nDeleted Chi-Sq d.f. P Residual d.f. P AIC\njob 4.72 5 0.4511 4.72 5 0.4511 -5.28 is_hispanic 0.05 1 0.8256 4.77 6 0.5740 -7.23 race 4.62 3 0.2014 9.39 9 0.4019 -8.61 is_male 1.42 1 0.2331 10.81 10 0.3722 -9.19 education 9.16 3 0.0272 19.98 13 0.0958 -6.02\nApproximate Estimates after Deleting Factors\n                                     Coef      S.E.  Wald Z         P\nIntercept 3.9752486 0.5606895 7.0899 1.342e-12 age -0.0970440 0.0281518 -3.4472 5.665e-04 age^2 0.0008924 0.0003568 2.5014 1.237e-02 marital=Never married -0.3026171 0.2145480 -1.4105 1.584e-01 marital=Separated/Divorced/Widowed -0.1224920 0.2405271 -0.5093 6.106e-01 marital=Missing -1.1652995 0.1797076 -6.4844 8.907e-11\nFactors in Final Model\n[1] age marital\n\nShow the code\nsummary(attr(validate_randomization, \"kept\")) %&gt;%\n  kable() %&gt;%\n  kable_styling()\n\n\n\n\n\n\nage\njob\nmarital\neducation\nis_male\nis_hispanic\nrace\n\n\n\n\n\nMode:logical\nMode :logical\nMode :logical\nMode :logical\nMode :logical\nMode :logical\nMode :logical\n\n\n\nTRUE:200\nFALSE:137\nFALSE:2\nFALSE:147\nFALSE:183\nFALSE:193\nFALSE:152\n\n\n\nNA\nTRUE :63\nTRUE :198\nTRUE :53\nTRUE :17\nTRUE :7\nTRUE :48\n\n\n\n\n\n\n\nShow the code\nlrm_final &lt;- lrm(randomization ~ pol(age, 2) +  marital, rand2, x = TRUE, y = TRUE, penalty = 0.4)\n\nrand2$predict_randomization &lt;- predict(lrm_final, type = \"fitted\")\n\ncat(\"\\n\\n## Final model is age + marital \\n\\n\")"
  },
  {
    "objectID": "index.html#final-model-is-age-marital",
    "href": "index.html#final-model-is-age-marital",
    "title": "R/Medicine 2024 Data Challenge",
    "section": "2.2 Final model is age + marital",
    "text": "2.2 Final model is age + marital\n\nShow the code\ncoef &lt;- coefficients(lrm_final)\nse &lt;- sqrt(diag(vcov(lrm_final)))\n\ncat(\"\\n\\n## Final logistic regression model predicting successful randomization (log-odds)\\n\\n\")"
  },
  {
    "objectID": "index.html#final-logistic-regression-model-predicting-successful-randomization-log-odds",
    "href": "index.html#final-logistic-regression-model-predicting-successful-randomization-log-odds",
    "title": "R/Medicine 2024 Data Challenge",
    "section": "2.3 Final logistic regression model predicting successful randomization (log-odds)",
    "text": "2.3 Final logistic regression model predicting successful randomization (log-odds)\n\nShow the code\ncat(\"\\n\\n(factor reference levels based on alphabetical order)\\n\\n\")\n\n(factor reference levels based on alphabetical order)\n\nShow the code\ntibble(term = names(coef), coef, se) %&gt;%\n  mutate(p = 2 * case_when(coef &gt; 0 ~ pnorm(coef / se, lower.tail = FALSE), TRUE ~ pnorm(coef / se, lower.tail = TRUE))) %&gt;%\n  kable() %&gt;%\n  kable_styling() %&gt;%\n  pack_rows(\"Marital status (ref level Married or Partnered)\", 4, 6)\n\n\n\n\n\nterm\ncoef\nse\np\n\n\n\n\nIntercept\n3.9295563\n0.5521571\n0.0000000\n\n\nage\n-0.0942862\n0.0277166\n0.0006694\n\n\nage^2\n0.0008648\n0.0003514\n0.0138650\n\n\nMarital status (ref level Married or Partnered)\n\n\nmarital=Never married\n-0.3160014\n0.2136973\n0.1392115\n\n\nmarital=Separated/Divorced/Widowed\n-0.1275931\n0.2399296\n0.5948688\n\n\nmarital=Missing\n-1.2242426\n0.1790931\n0.0000000\n\n\n\n\n\n\n\nShow the code\ncalibrate_final &lt;- calibrate(lrm_final, B = 200)\n\ncalibrate_tbl &lt;-\n  calibrate_final[, c(\"predy\", \"calibrated.orig\", \"calibrated.corrected\")] %&gt;%\n  as_tibble() %&gt;%\n  pivot_longer(calibrated.orig:calibrated.corrected)\n\ncat(\"\\n\\n## Show calibration (predicted vs actual) for predictive model of randomization\\n\\n\")"
  },
  {
    "objectID": "index.html#show-calibration-predicted-vs-actual-for-predictive-model-of-randomization",
    "href": "index.html#show-calibration-predicted-vs-actual-for-predictive-model-of-randomization",
    "title": "R/Medicine 2024 Data Challenge",
    "section": "2.4 Show calibration (predicted vs actual) for predictive model of randomization",
    "text": "2.4 Show calibration (predicted vs actual) for predictive model of randomization\n\nShow the code\ncalibrate_tbl %&gt;%\n  ggplot(aes(x = predy, y = value, color = name)) +\n  geom_line(linewidth = 1) +\n  theme_bw() +\n  labs(color = \"calibration\", x = \"Predicted Probability\", y = \"Actual Probability\") +\n  theme(legend.position = c(0.8, 0.2)) +\n  geom_abline(linetype = \"dashed\")\n\n\n\nShow the code\nauc &lt;- ci.auc(roc(randomization ~ predict_randomization, data = rand2 %&gt;% filter(!is.na(predict_randomization))))\n\ncat(sprintf(\"\\n\\n## ROC curve AUC is %0.2f (95 percent CI %0.2f - %0.2f)\\n\\n\", auc[2], auc[1], auc[3]))"
  },
  {
    "objectID": "index.html#roc-curve-auc-is-0.66-95-percent-ci-0.64---0.68",
    "href": "index.html#roc-curve-auc-is-0.66-95-percent-ci-0.64---0.68",
    "title": "R/Medicine 2024 Data Challenge",
    "section": "2.5 ROC curve AUC is 0.66 (95 percent CI 0.64 - 0.68)",
    "text": "2.5 ROC curve AUC is 0.66 (95 percent CI 0.64 - 0.68)\n\nShow the code\nplot(roc(randomization ~ predict_randomization, data = rand2 %&gt;% filter(!is.na(predict_randomization))))\n\n\n\nShow the code\ncat(\"\\n\\n\")\n\n\nShow the code\ncat(\"\\n\\n## Estimated marginal means\\n\\n\")"
  },
  {
    "objectID": "index.html#estimated-marginal-means",
    "href": "index.html#estimated-marginal-means",
    "title": "R/Medicine 2024 Data Challenge",
    "section": "2.6 Estimated marginal means",
    "text": "2.6 Estimated marginal means\n\nShow the code\ncat(\"\\n\\n### Marital\\n\\n\")\n\n\n2.6.1 Marital\n\nShow the code\nplot(ggemmeans(lrm_final, \"marital\"))\n\n\n\nShow the code\ncat(\"\\n\\n\")\n\n\nShow the code\ncat(\"\\n\\n### Age\\n\\n\")\n\n\n\n2.6.2 Age\n\nShow the code\nplot(ggemmeans(lrm_final, \"age[all]\"))\n\n\n\nShow the code\ncat(\"\\n\\n### Age (per project, not counting 51)\\n\\n\")\n\n\n\n2.6.3 Age (per project, not counting 51)\n\nShow the code\nggplot(randomization_tbl,aes(x=age, color=project, fill=project, y=as.numeric(as.character(randomization)))) + geom_smooth() + theme_bw() + labs(y=\"Observed Probability of randomzation\")"
  },
  {
    "objectID": "index.html#beta-regression-coefficients-factor-reference-levels-based-on-alphabetical-order",
    "href": "index.html#beta-regression-coefficients-factor-reference-levels-based-on-alphabetical-order",
    "title": "R/Medicine 2024 Data Challenge",
    "section": "3.1 Beta regression coefficients (factor reference levels based on alphabetical order)",
    "text": "3.1 Beta regression coefficients (factor reference levels based on alphabetical order)\n\nShow the code\ncat(\"\\n\\n### Compliance\\n\\n\")\n\n\n3.1.1 Compliance\n\nShow the code\ntidy(beta_compliance_red) %&gt;%\n  dplyr::select(-statistic) %&gt;%\n  kable() %&gt;%\n  kable_styling() %&gt;%\n  pack_rows(\"Race (reference level Black)\", 3, 5) %&gt;%\n  pack_rows(\"job (reference level Full Time)\", 6, 10) %&gt;%\n  pack_rows(\"Marital (ref level Married or Partnered)\", 11, 13)\n\n\n\n\n\ncomponent\nterm\nestimate\nstd.error\np.value\n\n\n\n\nmean\n(Intercept)\n-1.4656202\n0.1722355\n0.0000000\n\n\nmean\nage\n0.0077218\n0.0025338\n0.0023075\n\n\nRace (reference level Black)\n\n\nmean\nraceOther\n-0.0000154\n0.1035300\n0.9998809\n\n\nmean\nraceRefused/missing\n-0.1131639\n0.3348571\n0.7354034\n\n\nmean\nraceWhite\n0.1482887\n0.0878694\n0.0914874\n\n\njob (reference level Full Time)\n\n\nmean\njobOther\n0.3114931\n0.1846286\n0.0915776\n\n\nmean\njobPart Time\n-0.1640795\n0.0855055\n0.0549926\n\n\nmean\njobStudent\n-0.2596616\n0.1956821\n0.1845232\n\n\nmean\njobUnemployed\n0.0299534\n0.0846908\n0.7235793\n\n\nmean\njobMissing\n-0.5690129\n0.6021055\n0.3446392\n\n\nMarital (ref level Married or Partnered)\n\n\nmean\nmaritalNever married\n0.2686716\n0.0884782\n0.0023927\n\n\nmean\nmaritalSeparated/Divorced/Widowed\n0.2431355\n0.1008997\n0.0159667\n\n\nmean\nmaritalMissing\n0.5755636\n0.6054473\n0.3417862\n\n\nmean\nheroin1\n-0.1291437\n0.0619663\n0.0371516\n\n\nmean\nopioid1\n0.2627274\n0.0567428\n0.0000037\n\n\nprecision\n(phi)\n1.2804061\n0.0325090\n0.0000000\n\n\n\n\n\n\n\nShow the code\ncat(\"\\n\\n### No major difference between Projects\\n\\n\")\n\n\n\n3.1.2 No major difference between Projects\n\nShow the code\ncat(\"\\n\\nUpdate models by adding project and look for marginal means between projects\\n\\n\")\n\nUpdate models by adding project and look for marginal means between projects\n\nShow the code\ncat(\"\\n\\n#### Compliance\\n\\n\")\n\n\n3.1.2.1 Compliance\n\nShow the code\nggemmeans(update(beta_compliance_red,.~.+project),\"project\") %&gt;% as.data.frame()   %&gt;% dplyr::select(project=x, predicted, conf.low, conf.high) %&gt;% kable() %&gt;% kable_styling()\n\n\n\n\n\nproject\npredicted\nconf.low\nconf.high\n\n\n\n\n27\n0.2862537\n0.2271404\n0.3453670\n\n\n30\n0.2495486\n0.1970343\n0.3020629\n\n\n51\n0.3312811\n0.2736646\n0.3888977\n\n\n\n\n\n\n\nShow the code\ncat(\"\\n\\n#### Attendance\\n\\n\")\n\n\n\n3.1.2.2 Attendance\n\nShow the code\nggemmeans(update(beta_attendance_red,.~.+project),\"project\") %&gt;% as.data.frame()   %&gt;% dplyr::select(project=x, predicted, conf.low, conf.high) %&gt;% kable() %&gt;% kable_styling()\n\n\n\n\n\nproject\npredicted\nconf.low\nconf.high\n\n\n\n\n27\n0.4234444\n0.3310894\n0.5157993\n\n\n30\n0.4437619\n0.3556613\n0.5318625\n\n\n51\n0.4345425\n0.3448335\n0.5242516\n\n\n\n\n\n\n\nShow the code\ncat(\"\\n\\n### Attendance\\n\\n\")\n\n\n\n\n3.1.3 Attendance\n\nShow the code\ntidy(beta_attendance_red) %&gt;%\n  dplyr::select(-statistic) %&gt;%\n  kable() %&gt;%\n  kable_styling() %&gt;%\n  pack_rows(\"Job (reference level Full Time)\", 3, 7) %&gt;%\n  pack_rows(\"Is living stable (reference level No)\", 8, 9) %&gt;%\n  pack_rows(\"Marital (ref level Married or Partnered)\", 10, 12)\n\n\n\n\n\ncomponent\nterm\nestimate\nstd.error\np.value\n\n\n\n\nmean\n(Intercept)\n-1.1593638\n0.2248213\n0.0000003\n\n\nmean\nage\n0.0075580\n0.0024485\n0.0020234\n\n\nJob (reference level Full Time)\n\n\nmean\njobOther\n0.3098685\n0.1813007\n0.0874248\n\n\nmean\njobPart Time\n-0.1632520\n0.0856712\n0.0567067\n\n\nmean\njobStudent\n0.0124950\n0.1970223\n0.9494328\n\n\nmean\njobUnemployed\n0.0808107\n0.0845202\n0.3390160\n\n\nmean\njobMissing\n-0.7457840\n0.8317397\n0.3699027\n\n\nIs living stable (reference level No)\n\n\nmean\nis_living_stableYes\n0.3387088\n0.1782797\n0.0574498\n\n\nmean\nis_living_stableMissing\n1.2729703\n1.1954770\n0.2869565\n\n\nMarital (ref level Married or Partnered)\n\n\nmean\nmaritalNever married\n0.2358692\n0.0874130\n0.0069688\n\n\nmean\nmaritalSeparated/Divorced/Widowed\n0.0987595\n0.1001031\n0.3238495\n\n\nmean\nmaritalMissing\n0.0036187\n0.8424911\n0.9965729\n\n\nmean\nopioid1\n0.2378354\n0.0517281\n0.0000043\n\n\nmean\nspeed1\n-0.1193640\n0.0573867\n0.0375262\n\n\nprecision\n(phi)\n1.4512074\n0.0337427\n0.0000000\n\n\n\n\n\n\n\nShow the code\ncat(\"\\n\\n## Estimated marginal means\\n\\n\")"
  },
  {
    "objectID": "index.html#estimated-marginal-means-1",
    "href": "index.html#estimated-marginal-means-1",
    "title": "R/Medicine 2024 Data Challenge",
    "section": "3.2 Estimated marginal means",
    "text": "3.2 Estimated marginal means\n\nShow the code\ncat(\"\\n\\n### Age\\n\\n\")\n\n\n3.2.1 Age\n\nShow the code\nemm_compliance_age &lt;- ggemmeans(beta_compliance_red, \"age\") %&gt;% mutate(outcome=\"compliance\")\nemm_attendance_age &lt;- ggemmeans(beta_attendance_red, \"age\") %&gt;% mutate(outcome=\"attendance\")\n\nbind_rows(emm_attendance_age, emm_compliance_age) %&gt;%\n  ggplot(aes(x=x, y=predicted, ymax=conf.high, ymin=conf.low, color=outcome, fill=outcome)) + geom_smooth() + theme_bw() +scale_y_continuous(label=percent) + geom_ribbon(alpha=0.5, color=NA) + labs(y=\"Estimate\",x=\"Age\") + theme(legend.position = \"bottom\")\n\n\n\nShow the code\ncat(\"\\n\\n### Age (raw data) \\n\\n\")\n\n\n\n3.2.2 Age (raw data)\n\nShow the code\ncompliance_results %&gt;% ungroup() %&gt;% dplyr::select(compliance, attendance, age) %&gt;% pivot_longer(-age) %&gt;% ggplot(aes(x=age,y=value, color=name, fill=name)) + geom_point(alpha=0.25) + geom_smooth() + theme_bw() + labs(color=\"Outcome\", fill=\"Outcome\", y=\"Rate\") + theme(legend.position = \"bottom\") + scale_y_continuous(label=percent)\n\n\n\nShow the code\ncat(\"\\n\\n### Marital\\n\\n\")\n\n\n\n3.2.3 Marital\n\nShow the code\nemm_compliance_marital &lt;- ggemmeans(beta_compliance_red, \"marital\") %&gt;% mutate(outcome=\"compliance\") %&gt;% as.data.frame()\nemm_attendance_marital &lt;- ggemmeans(beta_attendance_red, \"marital\") %&gt;% mutate(outcome=\"attendance\")%&gt;% as.data.frame()\nbind_rows(emm_attendance_marital, emm_compliance_marital) %&gt;%\n  filter(!is.na(x)) %&gt;%\n  ggplot(aes(y=x, x=predicted, xmax=conf.high, xmin= predicted, color=outcome, fill=outcome, group=outcome)) + geom_bar(stat=\"identity\", position=\"dodge\") + geom_errorbar(position=\"dodge\") + theme_bw() + theme(legend.position = \"bottom\") + scale_x_continuous(label=percent) + labs(y=\"Marital\", x=\"Estimate\") + facet_grid(~outcome)\n\n\n\nShow the code\ncat(\"\\n\\n### Job\\n\\n\")\n\n\n\n3.2.4 Job\n\nShow the code\nemm_compliance_job &lt;- ggemmeans(beta_compliance_red, \"job\") %&gt;% mutate(outcome=\"compliance\") %&gt;% as.data.frame()\nemm_attendance_job &lt;- ggemmeans(beta_attendance_red, \"job\") %&gt;% mutate(outcome=\"attendance\")%&gt;% as.data.frame()\nbind_rows(emm_attendance_job, emm_compliance_job) %&gt;%\n  filter(!is.na(x)) %&gt;%\n  ggplot(aes(y=x, x=predicted, xmax=conf.high, xmin= predicted, color=outcome, fill=outcome, group=outcome)) + geom_bar(stat=\"identity\", position=\"dodge\") + geom_errorbar(position=\"dodge\") + theme_bw() + theme(legend.position = \"bottom\") + scale_x_continuous(label=percent) + labs(y=\"Job\", x=\"Estimate\") + facet_grid(~outcome)\n\n\n\nShow the code\ncat(\"\\n\\n### Opioid\\n\\n\")\n\n\n\n3.2.5 Opioid\n\nShow the code\nemm_compliance_opioid &lt;- ggemmeans(beta_compliance_red, \"opioid\") %&gt;% mutate(outcome=\"compliance\") %&gt;% as.data.frame()\nemm_attendance_opioid &lt;- ggemmeans(beta_attendance_red, \"opioid\") %&gt;% mutate(outcome=\"attendance\")%&gt;% as.data.frame()\nbind_rows(emm_attendance_opioid, emm_compliance_opioid) %&gt;%\n  filter(!is.na(x)) %&gt;%\n  ggplot(aes(y=x, x=predicted, xmax=conf.high, xmin= predicted, color=outcome, fill=outcome, group=outcome)) + geom_bar(stat=\"identity\", position=\"dodge\") + geom_errorbar(position=\"dodge\") + theme_bw() + theme(legend.position = \"bottom\") + scale_x_continuous(label=percent) + labs(y=\"opioid\", x=\"Estimate\") + facet_grid(~outcome)\n\n\n\nShow the code\n#test_predictions(beta_compliance_red, \"marital\") %&gt;%\n#  kable() %&gt;%\n#  kable_styling()\n\ncat(\"\\n\\n### Race (compliance alone)\\n\\n\")\n\n\n\n3.2.6 Race (compliance alone)\n\nShow the code\nplot(ggemmeans(beta_compliance_red, \"race\"))\n\n\n\nShow the code\ncat(\"\\n\\n### Heroin (compliance alone)\\n\\n\")\n\n\n\n3.2.7 Heroin (compliance alone)\n\nShow the code\nplot(ggemmeans(beta_compliance_red, \"heroin\"))\n\n\n\nShow the code\ncat(\"\\n\\n### Speed (attendance alone)\\n\\n\")\n\n\n\n3.2.8 Speed (attendance alone)\n\nShow the code\nplot(ggemmeans(beta_attendance_red, \"speed\"))\n\n\n\nShow the code\ncat(\"\\n\\n### Is living stable (attendance alone)\\n\\n\")\n\n\n\n3.2.9 Is living stable (attendance alone)\n\nShow the code\nplot(ggemmeans(beta_attendance_red, \"is_living_stable\"))"
  }
]