[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R Medicine Opioid competition",
    "section": "",
    "text": "1 INTRODUCTION\nThis is my attempt at the analyses requested in https://rconsortium.github.io/RMedicine_website/Competition.html. I focused on identifying predictive factors associated with two questions.\n\nOf the potential patients providing data, what factors were associated with succesful randomization?\nDefining compliance as the % of potential study weeks where a patient showed up with a negative test, what factors were associated with higher compliance?\n\n\n# load data and packages\nrequire(tidyverse)\n\nLoading required package: tidyverse\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nrequire(public.ctn0094data)\n\nLoading required package: public.ctn0094data\n\nrequire(public.ctn0094extra)\n\nLoading required package: public.ctn0094extra\n\nrequire(pROC)\n\nLoading required package: pROC\nType 'citation(\"pROC\")' for a citation.\n\nAttaching package: 'pROC'\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\nrequire(ggeffects)\n\nLoading required package: ggeffects\n\nrequire(kableExtra)\n\nLoading required package: kableExtra\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nrequire(broom)\n\nLoading required package: broom\n\nrequire(rms)\n\nLoading required package: rms\nLoading required package: Hmisc\n\nAttaching package: 'Hmisc'\n\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n\nrequire(betareg)\n\nLoading required package: betareg\n\nrequire(scales)\n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nrequire(emmeans)\n\nLoading required package: emmeans\n\nAttaching package: 'emmeans'\n\nThe following object is masked from 'package:rms':\n\n    contrast\n\n\n\n\n2 SUCCESSFUL RANDOMIZATION\nOf the patients listed in ‘everybody’ which ones are successfully randomized (‘randomization’)?\n\n# create wide table of drug usge\n\nrbs_wide &lt;-\n  rbs %&gt;%\n  mutate(value = case_when(did_use == \"Yes\" ~ 1, did_use == \"No\" ~ 0)) %&gt;%\n  dplyr::select(who, what, value) %&gt;%\n  right_join(everybody %&gt;% dplyr::select(who)) %&gt;%\n  mutate(value = case_when(is.na(value) ~ 0, TRUE ~ value)) %&gt;%\n  pivot_wider(names_from = what, values_fill = 0) %&gt;%\n  mutate(total_reported_drugs = cocaine + heroin + speedball + opioid + speed) %&gt;%\n  dplyr::select(-`NA`) %&gt;%\n  mutate(total_reported_drugs = as.factor(total_reported_drugs))\n\nJoining with `by = join_by(who)`\n\nrandomization_tbl &lt;-\n  demographics %&gt;%\n  left_join(randomization %&gt;% filter(which == 1)) %&gt;%\n  mutate(randomization = as.factor(case_when(is.na(which) ~ \"0\", TRUE ~ which))) %&gt;%\n  inner_join(rbs_wide) %&gt;%\n  mutate(job = as.factor(case_when(is.na(job) ~ \"Missing\", TRUE ~ job))) %&gt;%\n  mutate(is_living_stable = as.factor(case_when(is.na(is_living_stable) ~ \"Missing\", TRUE ~ is_living_stable))) %&gt;%\n  mutate(education = as.factor(case_when(is.na(education) ~ \"Missing\", TRUE ~ education))) %&gt;%\n  mutate(marital = as.factor(case_when(is.na(marital) ~ \"Missing\", TRUE ~ marital))) %&gt;%\n  mutate(job = fct_relevel(job, \"Missing\", after = Inf)) %&gt;%\n  mutate(is_living_stable = fct_relevel(is_living_stable, \"Missing\", after = Inf)) %&gt;%\n  mutate(education = fct_relevel(education, \"Missing\", after = Inf)) %&gt;%\n  mutate(marital = fct_relevel(marital, \"Missing\", after = Inf)) %&gt;%\n  mutate(cocaine = as.factor(cocaine), heroin = as.factor(heroin), speedball = as.factor(speedball), opioid = as.factor(opioid), speed = as.factor(speed)) %&gt;%\n  inner_join(everybody)\n\nJoining with `by = join_by(who)`\nJoining with `by = join_by(who)`\nJoining with `by = join_by(who)`\n\n# use optimum penalty of 1 determined manually using 'pentrace'\n\nlrm_randomization &lt;-\n  lrm(randomization ~ pol(age, 2) + job + education + marital + is_male + is_hispanic + race + total_reported_drugs + heroin + speedball + opioid, randomization_tbl, x = TRUE, y = TRUE, penalty = 1)\n\n\ncat(\"\\n\\n## Use bootstrap validation to determine what values are persistent\\n\\n\")\n\n\n\n## Use bootstrap validation to determine what values are persistent\n\ncat(\"\\n\\n'Total reported drugs' is cocaine + speed + speedball + opioid + heroin as 0/1 from rbs\\n\\n\")\n\n\n\n'Total reported drugs' is cocaine + speed + speedball + opioid + heroin as 0/1 from rbs\n\nvalidate_randomization &lt;- validate(lrm_randomization, B = 200, bw = TRUE)\n\n\n        Backwards Step-down - Original Model\n\n Deleted     Chi-Sq d.f. P      Residual d.f. P      AIC   \n job         0.23   5    0.9988  0.23     5   0.9988  -9.77\n education   2.69   3    0.4427  2.92     8   0.9395 -13.08\n is_hispanic 0.11   1    0.7370  3.03     9   0.9632 -14.97\n is_male     0.17   1    0.6795  3.20    10   0.9763 -16.80\n speedball   1.84   1    0.1749  5.04    11   0.9293 -16.96\n race        8.97   3    0.0297 14.01    14   0.4493 -13.99\n heroin      6.24   1    0.0125 20.25    15   0.1627  -9.75\n opioid      5.43   1    0.0198 25.68    16   0.0587  -6.32\n\nApproximate Estimates after Deleting Factors\n\n                                         Coef      S.E.  Wald Z         P\nIntercept                           0.2726217 0.6201659  0.4396 6.602e-01\nage                                -0.0731720 0.0295826 -2.4735 1.338e-02\nage^2                               0.0005492 0.0003716  1.4780 1.394e-01\nmarital=Never married               0.1830554 0.2178662  0.8402 4.008e-01\nmarital=Separated/Divorced/Widowed  0.2124224 0.2446399  0.8683 3.852e-01\nmarital=Missing                    -0.9641235 0.1857561 -5.1903 2.100e-07\ntotal_reported_drugs=1              3.7372456 0.2154768 17.3441 0.000e+00\ntotal_reported_drugs=2              3.6986121 0.2124678 17.4079 0.000e+00\ntotal_reported_drugs=3              3.6472251 0.2211314 16.4935 0.000e+00\ntotal_reported_drugs=4              3.8151182 0.2815350 13.5511 0.000e+00\ntotal_reported_drugs=5              3.4882191 0.4293229  8.1249 4.441e-16\n\nFactors in Final Model\n\n[1] age                  marital              total_reported_drugs\n\nsummary(attr(validate_randomization, \"kept\")) %&gt;%\n  kable() %&gt;%\n  kable_styling()\n\n\n\n\n\nage\njob\neducation\nmarital\nis_male\nis_hispanic\nrace\ntotal_reported_drugs\nheroin\nspeedball\nopioid\n\n\n\n\n\nMode :logical\nMode :logical\nMode :logical\nMode :logical\nMode :logical\nMode :logical\nMode :logical\nMode:logical\nMode :logical\nMode :logical\nMode :logical\n\n\n\nFALSE:1\nFALSE:198\nFALSE:177\nFALSE:17\nFALSE:198\nFALSE:193\nFALSE:139\nTRUE:200\nFALSE:155\nFALSE:168\nFALSE:137\n\n\n\nTRUE :199\nTRUE :2\nTRUE :23\nTRUE :183\nTRUE :2\nTRUE :7\nTRUE :61\nNA\nTRUE :45\nTRUE :32\nTRUE :63\n\n\n\n\n\n\nlrm_final &lt;- lrm(randomization ~ pol(age, 2) + marital + total_reported_drugs, randomization_tbl, x = TRUE, y = TRUE, penalty = 1)\n\nrandomization_tbl$predict_randomization &lt;- predict(lrm_final, type = \"fitted\")\n\ncat(\"\\n\\n## Project 51 has almost perfect randomization compared to other two\\n\\n\")\n\n\n\n## Project 51 has almost perfect randomization compared to other two\n\nggemmeans(update(lrm_final,.~.+project),\"project\") %&gt;% as.data.frame()   %&gt;% dplyr::select(project=x, predicted, conf.low, conf.high) %&gt;% kable() %&gt;% kable_styling()\n\n\n\n\nproject\npredicted\nconf.low\nconf.high\n\n\n\n\n27\n0.6509355\n0.5791867\n0.7164402\n\n\n30\n0.7240205\n0.6693301\n0.7727367\n\n\n51\n0.9940233\n0.9824580\n0.9979793\n\n\n\n\n\n\ncat(\"\\n\\n## Use bootstrap validtion to determine what values are persistent\\n\\n\")\n\n\n\n## Use bootstrap validtion to determine what values are persistent\n\ncoef &lt;- coefficients(lrm_final)\nse &lt;- sqrt(diag(vcov(lrm_final)))\n\ncat(\"\\n\\n## Final logistic regression model predicting successful randomization (log-odds)\\n\\n\")\n\n\n\n## Final logistic regression model predicting successful randomization (log-odds)\n\ncat(\"\\n\\n(factor reference levels based on alphabetical order)\\n\\n\")\n\n\n\n(factor reference levels based on alphabetical order)\n\ntibble(term = names(coef), coef, se) %&gt;%\n  mutate(p = 2 * case_when(coef &gt; 0 ~ pnorm(coef / se, lower.tail = FALSE), TRUE ~ pnorm(coef / se, lower.tail = TRUE))) %&gt;%\n  kable() %&gt;%\n  kable_styling() %&gt;%\n  pack_rows(\"Marital (ref level Married or Partnered)\", 4, 6) %&gt;%\n  pack_rows(\"Total Reported Drugs (reference level 0)\", 7, 11)\n\n\n\n\nterm\ncoef\nse\np\n\n\n\n\nIntercept\n0.1741456\n0.6158886\n0.7773647\n\n\nage\n-0.0722803\n0.0294367\n0.0140707\n\n\nage^2\n0.0005367\n0.0003702\n0.1471491\n\n\nMarital (ref level Married or Partnered)\n\n\nmarital=Never married\n0.1860933\n0.2177973\n0.3928649\n\n\nmarital=Separated/Divorced/Widowed\n0.2180355\n0.2447502\n0.3730099\n\n\nmarital=Missing\n-0.9700294\n0.1860135\n0.0000002\n\n\nTotal Reported Drugs (reference level 0)\n\n\ntotal_reported_drugs=1\n3.8333471\n0.2133380\n0.0000000\n\n\ntotal_reported_drugs=2\n3.8023090\n0.2102814\n0.0000000\n\n\ntotal_reported_drugs=3\n3.7605650\n0.2188092\n0.0000000\n\n\ntotal_reported_drugs=4\n3.9294689\n0.2790591\n0.0000000\n\n\ntotal_reported_drugs=5\n3.5772414\n0.4260219\n0.0000000\n\n\n\n\n\n\ncalibrate_final &lt;- calibrate(lrm_final, B = 200)\n\ncalibrate_tbl &lt;-\n  calibrate_final[, c(\"predy\", \"calibrated.orig\", \"calibrated.corrected\")] %&gt;%\n  as_tibble() %&gt;%\n  pivot_longer(calibrated.orig:calibrated.corrected)\n\ncat(\"\\n\\n## Show calibration (predicted vs actual) for predictive model of randomization\\n\\n\")\n\n\n\n## Show calibration (predicted vs actual) for predictive model of randomization\n\ncalibrate_tbl %&gt;%\n  ggplot(aes(x = predy, y = value, color = name)) +\n  geom_line(linewidth = 1) +\n  theme_bw() +\n  labs(color = \"calibration\", x = \"Predicted Probability\", y = \"Actual Probability\") +\n  theme(legend.position = c(0.8, 0.2)) +\n  geom_abline(linetype = \"dashed\")\n\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n\n\n\n\nauc &lt;- ci.auc(roc(randomization ~ predict_randomization, data = randomization_tbl %&gt;% filter(!is.na(predict_randomization))))\n\nSetting levels: control = 0, case = 1\nSetting direction: controls &lt; cases\n\ncat(sprintf(\"\\n\\n## ROC curve AUC is %0.2f (95 percent CI %0.2f - %0.2f), \\n\\n\", auc[2], auc[1], auc[3]))\n\n\n\n## ROC curve AUC is 0.81 (95 percent CI 0.79 - 0.83), \n\nplot(roc(randomization ~ predict_randomization, data = randomization_tbl %&gt;% filter(!is.na(predict_randomization))))\n\nSetting levels: control = 0, case = 1\nSetting direction: controls &lt; cases\n\n\n\n\ncat(\"\\n\\n\")\ncat(\"\\n\\n## Estimated marginal means\\n\\n\")\n\n\n\n## Estimated marginal means\n\ncat(\"\\n\\n### Marital\\n\\n\")\n\n\n\n### Marital\n\nplot(ggemmeans(lrm_final, \"marital\"))\n\n\n\ncat(\"\\n\\n\")\ntest_predictions(lrm_final, \"marital\") %&gt;%\n  kable() %&gt;%\n  kable_styling()\n\n\n\n\nmarital\nContrast\nconf.low\nconf.high\np.value\n\n\n\n\nMarried or Partnered-Never married\n-0.0252404\n-0.0824855\n0.0320046\n0.3874862\n\n\nMarried or Partnered-Separated/Divorced/Widowed\n-0.0298955\n-0.0961135\n0.0363225\n0.3762287\n\n\nMarried or Partnered-Missing\n0.0870519\n0.0348838\n0.1392201\n0.0010734\n\n\nNever married-Separated/Divorced/Widowed\n-0.0046551\n-0.0666364\n0.0573262\n0.8829721\n\n\nNever married-Missing\n0.1122923\n0.0624778\n0.1621069\n0.0000100\n\n\nSeparated/Divorced/Widowed-Missing\n0.1169474\n0.0563531\n0.1775418\n0.0001551\n\n\n\n\n\n\ncat(\"\\n\\n### Total reported drugs\\n\\n\")\n\n\n\n### Total reported drugs\n\nplot(ggemmeans(lrm_final, \"total_reported_drugs\"))\n\n\n\ncat(\"\\n\\n\")\ntest_predictions(lrm_final, \"total_reported_drugs\") %&gt;%\n  kable() %&gt;%\n  kable_styling()\n\n\n\n\ntotal_reported_drugs\nContrast\nconf.low\nconf.high\np.value\n\n\n\n\n0-1\n-0.7408890\n-0.7933182\n-0.6884598\n0.0000000\n\n\n0-2\n-0.7378239\n-0.7897550\n-0.6858928\n0.0000000\n\n\n0-3\n-0.7335837\n-0.7869992\n-0.6801682\n0.0000000\n\n\n0-4\n-0.7499212\n-0.8116047\n-0.6882376\n0.0000000\n\n\n0-5\n-0.7132936\n-0.8138319\n-0.6127554\n0.0000000\n\n\n1-2\n0.0030651\n-0.0206425\n0.0267727\n0.7999593\n\n\n1-3\n0.0073053\n-0.0197899\n0.0344004\n0.5971954\n\n\n1-4\n-0.0090321\n-0.0490508\n0.0309865\n0.6582287\n\n\n1-5\n0.0275954\n-0.0627017\n0.1178925\n0.5491874\n\n\n2-3\n0.0042402\n-0.0220300\n0.0305104\n0.7517362\n\n\n2-4\n-0.0120972\n-0.0516237\n0.0274293\n0.5486031\n\n\n2-5\n0.0245303\n-0.0654250\n0.1144856\n0.5930158\n\n\n3-4\n-0.0163374\n-0.0578999\n0.0252251\n0.4410482\n\n\n3-5\n0.0202901\n-0.0704499\n0.1110301\n0.6611965\n\n\n4-5\n0.0366275\n-0.0585622\n0.1318173\n0.4507509\n\n\n\n\n\n\ncat(\"\\n\\n### Age\\n\\n\")\n\n\n\n### Age\n\nplot(ggemmeans(lrm_final, \"age[all]\"))\n\n\n\n\n\n\n3 ATTENDANCE AND COMPLIANCE POST-RANDOMIZATION\nThis adapts the code from ‘public.ctn0094extra’ vignette to summarise substance use across weeks.\nI define compliance as how many times the patient showed up with a negative UDS report, divided by the length of time in the study (Study Week + 1 for Baseline). Attendance is how many times the patient showed up with a report (positive or negative), divided by length of time in the study.\nBeta regression is used to create a parsimonious model, pruned “by hand” to get rid of irrelevant predictors. The correlation coefficients for these models are not good (R-squared &lt; 0.03) but there may be some insight into how to get better attendance or compliance for patients\n\ndata_ls &lt;- loadRawData(c(\"randomization\", \"treatment\"))\n\ndata_ls$randomization &lt;-\n  data_ls$randomization %&gt;%\n  select(who, when, treatment, randomized = which) %&gt;%\n  # Remove second randomization events\n  filter(randomized != 2)\n\ndata_ls$treatment &lt;-\n  data_ls$treatment\n\nstart_int &lt;- c(`27` = -30L, `51` = -30L)\nend_int &lt;- c(`27` = 168L, `51` = 168L)\nbackbone2751_df &lt;-\n  CreateProtocolHistory(\n    start_vec = start_int,\n    end_vec = end_int\n  )\n\nbackbone30_df &lt;-\n  randomization %&gt;%\n  full_join(everybody, by = \"who\") %&gt;%\n  filter(project == \"30\") %&gt;%\n  CreateCTN30ProtocolHistory() %&gt;%\n  mutate(project = \"30\") %&gt;%\n  select(who, project, when)\n\nbackbone_df &lt;-\n  bind_rows(backbone2751_df, backbone30_df) %&gt;%\n  arrange(who)\n\nrm(backbone2751_df, backbone30_df, start_int, end_int)\n\ndata_ls &lt;- loadRawData(c(\"randomization\", \"visit\"))\n\ndata_ls$randomization &lt;-\n  data_ls$randomization %&gt;%\n  select(who, when, treatment, randomized = which) %&gt;%\n  # Remove second randomization events\n  filter(randomized != 2)\n\ndata_ls$visit &lt;-\n  data_ls$visit\n\n\ntimelineRand1_df &lt;-\n  data_ls$randomization %&gt;%\n  mutate(randomized = randomized == \"1\") %&gt;%\n  # Join to backbone and arrange within subject by day\n  full_join(backbone_df, by = c(\"who\", \"when\")) %&gt;%\n  group_by(who) %&gt;%\n  arrange(when, .by_group = TRUE) %&gt;%\n  select(who, project, when, randomized)\n\ntimelineVisit1_df &lt;-\n  data_ls$visit %&gt;%\n  select(who, when, visit, status = what) %&gt;%\n  filter(status %in% c(\"visit\", \"final\")) %&gt;%\n  mutate(visit = TRUE) %&gt;%\n  select(who, when, visit) %&gt;%\n  left_join(timelineRand1_df, ., by = c(\"who\", \"when\")) %&gt;%\n  distinct()\n\ntimelineMissing1_df &lt;- MarkMissing(timelineVisit1_df)\n\nderived_visitImputed &lt;-\n  timelineMissing1_df %&gt;%\n  mutate(visit = as.character(visit)) %&gt;%\n  replace_na(list(visit = \"\", visitYM = \"\")) %&gt;%\n  mutate(visitImputed = paste0(visit, visitYM)) %&gt;%\n  mutate(\n    visitImputed = str_replace(\n      visitImputed,\n      pattern = \"TRUETRUE\", replacement = \"Present\"\n    )\n  ) %&gt;%\n  select(who, when, visitImputed) %&gt;%\n  filter(visitImputed != \"\") %&gt;%\n  ungroup()\n\n\nrandomized_df &lt;-\n  randomization %&gt;%\n  mutate(randomized = as.integer(as.character(which))) %&gt;%\n  select(who, when, randomized) %&gt;%\n  left_join(everybody, by = \"who\") %&gt;%\n  filter(!(randomized == 2 & project %in% c(\"27\", \"51\"))) %&gt;%\n  select(-project)\n\nudsUse2_df &lt;-\n  backbone_df %&gt;%\n  left_join(randomized_df, by = c(\"who\", \"when\")) %&gt;%\n  left_join(derived_visitImputed, by = c(\"who\", \"when\")) %&gt;%\n  left_join(uds, by = c(\"who\", \"when\")) %&gt;%\n  # So we can use MarkUse() with UDS data (instead of all_drugs)\n  mutate(source = \"UDS\")\n\nrm(\n  backbone_df, data_ls, timelineMissing1_df, timelineRand1_df, timelineVisit1_df\n)\n\nnonStudyOpioids_ls &lt;- list(\n  \"Buprenorphine\" = c(\"Opioid\", \"Methadone\"),\n  \"Methadone\"     = c(\"Opioid\", \"Buprenorphine\"),\n  \"Naltrexone\"    = c(\"Opioid\", \"Methadone\", \"Buprenorphine\"),\n  \"Not treated\"   = c(\"Opioid\", \"Methadone\", \"Buprenorphine\")\n)\n\ntreatGroups_ls &lt;-\n  randomization %&gt;%\n  filter(which == 1) %&gt;%\n  left_join(everybody, by = \"who\") %&gt;%\n  select(who, treatment) %&gt;%\n  mutate(\n    treat_drug = case_when(\n      str_detect(treatment, \"BUP\") ~ \"Buprenorphine\",\n      treatment == \"Methadone\" ~ \"Methadone\",\n      treatment == \"Inpatient NR-NTX\" ~ \"Naltrexone\"\n    )\n  ) %&gt;%\n  select(-treatment) %&gt;%\n  split(f = .$treat_drug) %&gt;%\n  map(.f = \"who\")\n\nopioidUse_df &lt;-\n  udsUse2_df %&gt;%\n  mutate(\n    treat_group = case_when(\n      who %in% treatGroups_ls$Buprenorphine ~ \"Buprenorphine\",\n      who %in% treatGroups_ls$Methadone ~ \"Methadone\",\n      who %in% treatGroups_ls$Naltrexone ~ \"Naltrexone\",\n      TRUE ~ \"Not treated\"\n    )\n  ) %&gt;%\n  split(f = .$treat_group) %&gt;%\n  # List of data in alphabetical order, so the non-study drugs ls should match\n  map2(\n    .y = nonStudyOpioids_ls,\n    .f = ~ {\n      # REQUIRES \"source\" COLUMN\n      MarkUse(\n        targetDrugs_char = .y,\n        drugs_df = .x,\n        # because we have participants with no recorded UDS; in practice DO NOT\n        #   use this command\n        retainEmptyRows = TRUE\n      )\n    }\n  ) %&gt;%\n  bind_rows() %&gt;%\n  mutate(\n    udsOpioid = case_when(\n      is.na(when) ~ NA,\n      !is.na(when) ~ TRUE\n    )\n  ) %&gt;%\n  select(who, when, udsOpioid)\n\nWarning: The following drugs were not matched: Buprenorphine. Please check for\npossible spelling/capitalization errors.\n\nWarning: The following drugs were not matched: Buprenorphine. Please check for\npossible spelling/capitalization errors.\n\ntimelineUDS_df &lt;-\n  udsUse2_df %&gt;%\n  left_join(opioidUse_df, by = c(\"who\", \"when\")) %&gt;%\n  select(-what, -source) %&gt;%\n  # 2,089 rows to 1,994\n  distinct()\n\nrm(\n  derived_visitImputed, opioidUse_df, randomized_df, treatGroups_ls, udsUse2_df\n)\n\nwasRandomized_int &lt;-\n  timelineUDS_df %&gt;%\n  group_by(who) %&gt;%\n  summarise(randomized = any(randomized %in% 1:2)) %&gt;%\n  filter(randomized) %&gt;%\n  pull(who)\nnotRandomized_int &lt;-\n  timelineUDS_df %&gt;%\n  filter(!(who %in% wasRandomized_int)) %&gt;%\n  pull(who) %&gt;%\n  unique()\n\ntimelineUDS2_df &lt;-\n  timelineUDS_df %&gt;%\n  filter(who %in% wasRandomized_int) %&gt;%\n  group_by(who) %&gt;%\n  filter(!is.na(randomized)) %&gt;%\n  mutate(\n    whenRandomized1 = case_when(randomized == 1 ~ when),\n    whenRandomized2 = case_when(randomized == 2 ~ when)\n  ) %&gt;%\n  select(who, when, whenRandomized1, whenRandomized2) %&gt;%\n  left_join(timelineUDS_df, ., by = c(\"who\", \"when\")) %&gt;%\n  filter(who %in% wasRandomized_int) %&gt;%\n  # Add back in the groupings BEFORE the fill()\n  group_by(who) %&gt;%\n  fill(whenRandomized1, .direction = \"updown\") %&gt;%\n  fill(whenRandomized2, .direction = \"updown\") %&gt;%\n  mutate(daysSinceRand1 = when - whenRandomized1) %&gt;%\n  mutate(daysSinceRand2 = when - whenRandomized2) %&gt;%\n  select(-whenRandomized1, -whenRandomized2)\n\nweeklyUse_df &lt;-\n  timelineUDS2_df %&gt;%\n  # The (daysSinceRand1 - 1) adjustment is to ensure that the first study week\n  #   is a full 7 days, since \"day 0\" is the day before randomization. The \"+1\"\n  #   at the end is to shift the study week label such that \"week 0\" is the\n  #   week *BEFORE* treatment, rather than the first week of treatment. So, the\n  #   randomization day is the last day of \"week 0\" (the pre-treatment period).\n  mutate(studyWeek1 = (daysSinceRand1 - 1) %/% 7 + 1) %&gt;%\n  mutate(studyWeek2 = (daysSinceRand2 - 1) %/% 7 + 1) %&gt;%\n  group_by(who, studyWeek1) %&gt;%\n  # There are some study weeks with multiple UDS, so we count the number of\n  #   positive and negative UDS per week.\n  summarise(\n    nPosUDS  = sum(udsOpioid == 1, na.rm = TRUE),\n    nNegUDS  = sum(visitImputed == \"Present\" & is.na(udsOpioid), na.rm = TRUE),\n    nMissing = sum(visitImputed == \"Missing\", na.rm = TRUE),\n    randWk1  = sum(randomized == 1, na.rm = TRUE) &gt; 0,\n    randWk2  = sum(randomized == 2 & project == \"30\", na.rm = TRUE) &gt; 0\n  ) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'who'. You can override using the `.groups`\nargument.\n\nuseByWeekRandomized_df &lt;-\n  weeklyUse_df %&gt;%\n  mutate(\n    udsStatus = case_when(\n      # If we see a positive UDS and no negative UDS, it's positive\n      nPosUDS &gt; 0 & nNegUDS == 0 ~ \"+\",\n      # If we see a negative UDS and no positive UDS, it's negative\n      nPosUDS == 0 & nNegUDS &gt; 0 ~ \"-\",\n      # If we see both positive and negative UDS in a single week, it's both\n      #   (note that we can recode all \"B\"s to be \"+\" as necessary)\n      nPosUDS &gt; 0 & nNegUDS &gt; 0 ~ \"*\",\n      # If we don't have any UDS in a week after randomization, it's missing\n      # UPDATE 2022-03-08: I had this as a 0 originally, and I was using this\n      #   in context of consent, not randomization. This was wrong.\n      nPosUDS == 0 & nNegUDS == 0 & studyWeek1 &gt;= 1 ~ \"o\",\n      # If none of the above are true, but we still have a missing value as\n      #   marked by the MarkMissing() function, then it's missing\n      nMissing &gt; 0 ~ \"o\",\n      # If none of the above conditions are true (probably because it's a week\n      #   before randomization but not during a baseline visit for consent),\n      #   then leave it blank (pre-study)\n      TRUE ~ \"_\"\n    )\n  ) %&gt;%\n  group_by(who) %&gt;%\n  # For CTN-0030, Phase II could have started on any day of the week, even in\n  #   the middle of a treatment week. If we try to start counting Phase II\n  #   weeks the day after treatment arms are switched, we can end up with the\n  #   last \"week\" of Phase I not having 7 days. I'm going to leave the first\n  #   week of Phase II as whatever week the switch happened in.\n  mutate(\n    rand1Active = studyWeek1 &gt; 0,\n    # This returns 0 for any week before the Phase II randomization, and 1 for\n    #   the Phase II randomization week and all subsequent weeks (because the\n    #   randWk2 column is 1 only for the week of second randomization and 0\n    #   all other rows).\n    rand2Active = cumsum(randWk2),\n    trialPhase  = rand1Active + rand2Active\n  ) %&gt;%\n  dplyr::select(\n    who,\n    studyWeek = studyWeek1, randWk1, randWk2, udsStatus, trialPhase\n  )\n\n\n#### NEW\n\n\ncompliance_results &lt;-\n  useByWeekRandomized_df %&gt;%\n  filter(trialPhase == 1) %&gt;%\n  filter(studyWeek &gt;= 0) %&gt;%\n  inner_join(everybody) %&gt;%\n  group_by(project, who) %&gt;%\n  summarise(sum_pos = sum(udsStatus == \"+\"), sum_neg = sum(udsStatus == \"-\"), sumMissing = sum(udsStatus == \"o\"), total_weeks = 1 + max(studyWeek)) %&gt;%\n  mutate(compliance = sum_neg / total_weeks, attendance = (sum_neg+sum_pos)/total_weeks) %&gt;%\n  inner_join(randomization_tbl %&gt;% dplyr::select(who, age, is_hispanic, race, job, education, is_living_stable, marital, is_male, cocaine:total_reported_drugs, predict_randomization)) %&gt;%\n  mutate(project=as.factor(project))\n\nJoining with `by = join_by(who)`\n`summarise()` has grouped output by 'project'. You can override using the\n`.groups` argument.\nJoining with `by = join_by(who)`\n\n# from https://stats.stackexchange.com/questions/31300/dealing-with-0-1-values-in-a-beta-regression\n# squeeze 0 and 1 so can use beta regression\n\nN &lt;- dim(compliance_results)[1]\n\ncompliance_results &lt;- mutate(compliance_results, squeeze_compliance = (compliance * (N - 1) + 0.5) / N, squeeze_attendance = (attendance * (N - 1) + 0.5) / N)\n\n\nbeta_compliance &lt;- betareg(squeeze_compliance ~ age + is_hispanic + race + education + job + is_living_stable + marital + is_male + cocaine + heroin + speedball + opioid + speed, compliance_results)\n\nbeta_compliance_red &lt;- betareg(squeeze_compliance ~ age + race + job + marital + heroin + opioid, compliance_results)\n\nbeta_attendance &lt;- betareg(squeeze_attendance ~ age + is_hispanic + race + education + job + is_living_stable + marital + is_male + cocaine + heroin + speedball + opioid + speed, compliance_results)\n\nWarning in betareg.fit(X, Y, Z, weights, offset, link, link.phi, type,\ncontrol): no valid starting value for precision parameter found, using 1\ninstead\n\nbeta_attendance_red &lt;- betareg(squeeze_attendance ~ age   + job + is_living_stable + marital + opioid + speed, compliance_results)\n\nWarning in betareg.fit(X, Y, Z, weights, offset, link, link.phi, type,\ncontrol): no valid starting value for precision parameter found, using 1\ninstead\n\ncat(\"\\n\\n## Beta regression coefficients (factor reference levels based on alphabetical order)\\n\\n\")\n\n\n\n## Beta regression coefficients (factor reference levels based on alphabetical order)\n\ncat(\"\\n\\n### Compliance\\n\\n\")\n\n\n\n### Compliance\n\ntidy(beta_compliance_red) %&gt;%\n  dplyr::select(-statistic) %&gt;%\n  kable() %&gt;%\n  kable_styling() %&gt;%\n  pack_rows(\"Race (reference level Black)\", 3, 5) %&gt;%\n  pack_rows(\"job (reference level Full Time)\", 6, 10) %&gt;%\n  pack_rows(\"Marital (ref level Married or Partnered)\", 11, 13)\n\n\n\n\ncomponent\nterm\nestimate\nstd.error\np.value\n\n\n\n\nmean\n(Intercept)\n-1.4656202\n0.1722355\n0.0000000\n\n\nmean\nage\n0.0077218\n0.0025338\n0.0023075\n\n\nRace (reference level Black)\n\n\nmean\nraceOther\n-0.0000154\n0.1035300\n0.9998809\n\n\nmean\nraceRefused/missing\n-0.1131639\n0.3348571\n0.7354034\n\n\nmean\nraceWhite\n0.1482887\n0.0878694\n0.0914874\n\n\njob (reference level Full Time)\n\n\nmean\njobOther\n0.3114931\n0.1846286\n0.0915776\n\n\nmean\njobPart Time\n-0.1640795\n0.0855055\n0.0549926\n\n\nmean\njobStudent\n-0.2596616\n0.1956821\n0.1845232\n\n\nmean\njobUnemployed\n0.0299534\n0.0846908\n0.7235793\n\n\nmean\njobMissing\n-0.5690129\n0.6021055\n0.3446392\n\n\nMarital (ref level Married or Partnered)\n\n\nmean\nmaritalNever married\n0.2686716\n0.0884782\n0.0023927\n\n\nmean\nmaritalSeparated/Divorced/Widowed\n0.2431355\n0.1008997\n0.0159667\n\n\nmean\nmaritalMissing\n0.5755636\n0.6054473\n0.3417862\n\n\nmean\nheroin1\n-0.1291437\n0.0619663\n0.0371516\n\n\nmean\nopioid1\n0.2627274\n0.0567428\n0.0000037\n\n\nprecision\n(phi)\n1.2804061\n0.0325090\n0.0000000\n\n\n\n\n\n\ncat(\"\\n\\n### No major difference between Projects\\n\\n\")\n\n\n\n### No major difference between Projects\n\ncat(\"\\n\\nUpdate models by adding project and look for marginal means between projects\\n\\n\")\n\n\n\nUpdate models by adding project and look for marginal means between projects\n\ncat(\"\\n\\n#### Compliance\\n\\n\")\n\n\n\n#### Compliance\n\nggemmeans(update(beta_compliance_red,.~.+project),\"project\") %&gt;% as.data.frame()   %&gt;% dplyr::select(project=x, predicted, conf.low, conf.high) %&gt;% kable() %&gt;% kable_styling()\n\n\n\n\nproject\npredicted\nconf.low\nconf.high\n\n\n\n\n27\n0.2862537\n0.2271404\n0.3453670\n\n\n30\n0.2495486\n0.1970343\n0.3020629\n\n\n51\n0.3312811\n0.2736646\n0.3888977\n\n\n\n\n\n\ncat(\"\\n\\n#### Attendance\\n\\n\")\n\n\n\n#### Attendance\n\nggemmeans(update(beta_attendance_red,.~.+project),\"project\") %&gt;% as.data.frame()   %&gt;% dplyr::select(project=x, predicted, conf.low, conf.high) %&gt;% kable() %&gt;% kable_styling()\n\nWarning in betareg.fit(X, Y, Z, weights, offset, link, link.phi, type,\ncontrol): no valid starting value for precision parameter found, using 1\ninstead\n\n\n\n\n\nproject\npredicted\nconf.low\nconf.high\n\n\n\n\n27\n0.4234444\n0.3310894\n0.5157993\n\n\n30\n0.4437619\n0.3556613\n0.5318625\n\n\n51\n0.4345425\n0.3448335\n0.5242516\n\n\n\n\n\n\ncat(\"\\n\\n### Attendance\\n\\n\")\n\n\n\n### Attendance\n\ntidy(beta_attendance_red) %&gt;%\n  dplyr::select(-statistic) %&gt;%\n  kable() %&gt;%\n  kable_styling() %&gt;%\n  pack_rows(\"Job (reference level Full Time)\", 3, 7) %&gt;%\n  pack_rows(\"Is living stable (reference level No)\", 8, 9) %&gt;%\n  pack_rows(\"Marital (ref level Married or Partnered)\", 10, 12)\n\n\n\n\ncomponent\nterm\nestimate\nstd.error\np.value\n\n\n\n\nmean\n(Intercept)\n-1.1593638\n0.2248213\n0.0000003\n\n\nmean\nage\n0.0075580\n0.0024485\n0.0020234\n\n\nJob (reference level Full Time)\n\n\nmean\njobOther\n0.3098685\n0.1813007\n0.0874248\n\n\nmean\njobPart Time\n-0.1632520\n0.0856712\n0.0567067\n\n\nmean\njobStudent\n0.0124950\n0.1970223\n0.9494328\n\n\nmean\njobUnemployed\n0.0808107\n0.0845202\n0.3390160\n\n\nmean\njobMissing\n-0.7457840\n0.8317397\n0.3699027\n\n\nIs living stable (reference level No)\n\n\nmean\nis_living_stableYes\n0.3387088\n0.1782797\n0.0574498\n\n\nmean\nis_living_stableMissing\n1.2729703\n1.1954770\n0.2869565\n\n\nMarital (ref level Married or Partnered)\n\n\nmean\nmaritalNever married\n0.2358692\n0.0874130\n0.0069688\n\n\nmean\nmaritalSeparated/Divorced/Widowed\n0.0987595\n0.1001031\n0.3238495\n\n\nmean\nmaritalMissing\n0.0036187\n0.8424911\n0.9965729\n\n\nmean\nopioid1\n0.2378354\n0.0517281\n0.0000043\n\n\nmean\nspeed1\n-0.1193640\n0.0573867\n0.0375262\n\n\nprecision\n(phi)\n1.4512074\n0.0337427\n0.0000000\n\n\n\n\n\n\ncat(\"\\n\\n## Estimated marginal means\\n\\n\")\n\n\n\n## Estimated marginal means\n\ncat(\"\\n\\n### Age\\n\\n\")\n\n\n\n### Age\n\nemm_compliance_age &lt;- ggemmeans(beta_compliance_red, \"age\") %&gt;% mutate(outcome=\"compliance\")\nemm_attendance_age &lt;- ggemmeans(beta_attendance_red, \"age\") %&gt;% mutate(outcome=\"attendance\")\n\nbind_rows(emm_attendance_age, emm_compliance_age) %&gt;%\n  ggplot(aes(x=x, y=predicted, ymax=conf.high, ymin=conf.low, color=outcome, fill=outcome)) + geom_smooth() + theme_bw() +scale_y_continuous(label=percent) + geom_ribbon(alpha=0.5, color=NA) + labs(y=\"Estimate\",x=\"Age\") + theme(legend.position = \"bottom\")\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\ncat(\"\\n\\n### Age (raw data) \\n\\n\")\n\n\n\n### Age (raw data) \n\ncompliance_results %&gt;% ungroup() %&gt;% dplyr::select(compliance, attendance, age) %&gt;% pivot_longer(-age) %&gt;% ggplot(aes(x=age,y=value, color=name, fill=name)) + geom_point(alpha=0.25) + geom_smooth() + theme_bw() + labs(color=\"Outcome\", fill=\"Outcome\", y=\"Rate\") + theme(legend.position = \"bottom\") + scale_y_continuous(label=percent)\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\ncat(\"\\n\\n### Marital\\n\\n\")\n\n\n\n### Marital\n\nemm_compliance_marital &lt;- ggemmeans(beta_compliance_red, \"marital\") %&gt;% mutate(outcome=\"compliance\") %&gt;% as.data.frame()\nemm_attendance_marital &lt;- ggemmeans(beta_attendance_red, \"marital\") %&gt;% mutate(outcome=\"attendance\")%&gt;% as.data.frame()\nbind_rows(emm_attendance_marital, emm_compliance_marital) %&gt;%\n  filter(!is.na(x)) %&gt;%\n  ggplot(aes(y=x, x=predicted, xmax=conf.high, xmin= predicted, color=outcome, fill=outcome, group=outcome)) + geom_bar(stat=\"identity\", position=\"dodge\") + geom_errorbar(position=\"dodge\") + theme_bw() + theme(legend.position = \"bottom\") + scale_x_continuous(label=percent) + labs(y=\"Marital\", x=\"Estimate\") + facet_grid(~outcome)\n\n\n\ncat(\"\\n\\n### Job\\n\\n\")\n\n\n\n### Job\n\nemm_compliance_job &lt;- ggemmeans(beta_compliance_red, \"job\") %&gt;% mutate(outcome=\"compliance\") %&gt;% as.data.frame()\nemm_attendance_job &lt;- ggemmeans(beta_attendance_red, \"job\") %&gt;% mutate(outcome=\"attendance\")%&gt;% as.data.frame()\nbind_rows(emm_attendance_job, emm_compliance_job) %&gt;%\n  filter(!is.na(x)) %&gt;%\n  ggplot(aes(y=x, x=predicted, xmax=conf.high, xmin= predicted, color=outcome, fill=outcome, group=outcome)) + geom_bar(stat=\"identity\", position=\"dodge\") + geom_errorbar(position=\"dodge\") + theme_bw() + theme(legend.position = \"bottom\") + scale_x_continuous(label=percent) + labs(y=\"Job\", x=\"Estimate\") + facet_grid(~outcome)\n\n\n\ncat(\"\\n\\n### Opioid\\n\\n\")\n\n\n\n### Opioid\n\nemm_compliance_opioid &lt;- ggemmeans(beta_compliance_red, \"opioid\") %&gt;% mutate(outcome=\"compliance\") %&gt;% as.data.frame()\nemm_attendance_opioid &lt;- ggemmeans(beta_attendance_red, \"opioid\") %&gt;% mutate(outcome=\"attendance\")%&gt;% as.data.frame()\nbind_rows(emm_attendance_opioid, emm_compliance_opioid) %&gt;%\n  filter(!is.na(x)) %&gt;%\n  ggplot(aes(y=x, x=predicted, xmax=conf.high, xmin= predicted, color=outcome, fill=outcome, group=outcome)) + geom_bar(stat=\"identity\", position=\"dodge\") + geom_errorbar(position=\"dodge\") + theme_bw() + theme(legend.position = \"bottom\") + scale_x_continuous(label=percent) + labs(y=\"opioid\", x=\"Estimate\") + facet_grid(~outcome)\n\n\n\n#test_predictions(beta_compliance_red, \"marital\") %&gt;%\n#  kable() %&gt;%\n#  kable_styling()\n\ncat(\"\\n\\n### Race (compliance alone)\\n\\n\")\n\n\n\n### Race (compliance alone)\n\nplot(ggemmeans(beta_compliance_red, \"race\"))\n\n\n\ncat(\"\\n\\n### Heroin (compliance alone)\\n\\n\")\n\n\n\n### Heroin (compliance alone)\n\nplot(ggemmeans(beta_compliance_red, \"heroin\"))\n\n\n\ncat(\"\\n\\n### Speed (attendance alone)\\n\\n\")\n\n\n\n### Speed (attendance alone)\n\nplot(ggemmeans(beta_attendance_red, \"speed\"))\n\n\n\ncat(\"\\n\\n### Is living stable (attendance alone)\\n\\n\")\n\n\n\n### Is living stable (attendance alone)\n\nplot(ggemmeans(beta_attendance_red, \"is_living_stable\"))\n\n\n\n\n\n\n4 CONCLUSIONS\nAnalyses of the data indicate that the age of the participant is the most important factor for both successful randomization and higher attendance/compliance, however the effects go in opposite directions:\n\nFor randomization, the probability of enrollment is lower with increasing age.\nOnce randomized, the rates of attendance and compliance goe up with increasing age.\n\nFor randomization, the other predictors are the total reported drugs and martial status, but in both cases missing is the most important factor – and there, lack of reported data (indicating unwillingness to participate by reporting data?) indicates lower probability of being randomized. The predictive power of this model is quite strong (AUC 0.8, linear calibration curve).\nFor compliance and attendance, the predictive power of models are lower. Age remains the most powerful predictor, while other predictors appear to be race, job, marital status, and heroin and opioid."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]